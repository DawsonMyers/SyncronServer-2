/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.syncron.gui.netbeans;

import ca.syncron.network.message.Message;
import ca.syncron.network.tcp.client.ClientController;
import ca.syncron.network.tcp.server.UserBundle;

import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.Vector;

/**
 * @author Dawson
 */
public class SyncTestGui extends javax.swing.JFrame {
	/**
	 * Creates new form SyncTestGui
	 */
	public SyncTestGui() {
		initComponents();
		initListeners();
		me = this;
	}

	public static SyncTestGui me;

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		digitalOutPanel1 = new DigitalOutPanel();
		jMenuBar1 = new javax.swing.JMenuBar();
		jMenu1 = new javax.swing.JMenu();
		jMenu2 = new javax.swing.JMenu();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				             .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
				                                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				                                                                                .addComponent(digitalOutPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
				                                                                                .addContainerGap())
		                                );
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				             .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
				                                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				                                                                                .addComponent(digitalOutPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
				                                                                                .addContainerGap())
		                              );

		jMenu1.setText("File");
		jMenuBar1.add(jMenu1);

		jMenu2.setText("Edit");
		jMenuBar1.add(jMenu2);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				      .addGroup(layout.createSequentialGroup()
				                      .addContainerGap()
				                      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				                      .addContainerGap())
		                         );
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				      .addGroup(layout.createSequentialGroup()
				                      .addContainerGap()
				                      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				                      .addContainerGap())
		                       );

		pack();
	}// </editor-fold>//GEN-END:initComponents

	public void initListeners() {
		digitalOutPanel1.setMessageListener(new DigitalOutPanel.MessageListener() {
			@Override
			public void messageEvent(DigitalOutPanel.MsgBundle bundle) {
//				String s = bundle.type + " " + bundle.pin + " " + bundle.value;
				Message msg = new Message();
				Message.MessageType type;
				type = Message.MessageType.arrayList.get(bundle.typeInt);
				msg.setMessageType(type);
				msg.setPin(bundle.pin);
				msg.setValue(bundle.value);
				msg.setChatMessage(bundle.chat);
				msg.setIsTargeted(bundle.isTargeted == "true");
				msg.setTargetId(bundle.targetId);
				ClientController.getInstance().mClient.sendMessage(msg);
			}
		});
		digitalOutPanel1.setUserListListener(new DigitalOutPanel.UserListListener() {
			@Override
			public void itemSelectedEvent(int index) {
				System.out.println("User list index: " + index);
			}
		});
	}

	public void prepareUserList() {
		ArrayList<UserBundle> a = ClientController.mUserBundles;
		Vector<String> v = new Vector<>();
		for (UserBundle bundle : a) {
			v.add(bundle.getUserId());
		}
		setUserListData(v);
	}

	public void setUserListData(Vector<String> v) {
		digitalOutPanel1.setUserListData(v);
	}

	public void setPin(String pin, String value) {
		boolean val = value == "1";
		int iPin = Integer.parseInt(pin);
		digitalOutPanel1.pins.get(iPin - 2).digitalPin(val);

	}

	public void setPin(int pin, int value) {
		boolean val = value == 1;
		digitalOutPanel1.pins.get(pin - 2).digitalPin(val);

	}

	public static SyncTestGui getInstance() {
		return me;
	}


	public static SyncTestGui start() {
		// public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

		try {
			for (javax.swing.UIManager.LookAndFeelInfo info
					: javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(SyncTestGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(SyncTestGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(SyncTestGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(SyncTestGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

        /*
         * Create and display the form
         */
		try {
			java.awt.EventQueue.invokeAndWait(new Runnable() {
				public void run() {
					(me = new SyncTestGui()).setVisible(true);

				}
			});
		} catch (InterruptedException e) {
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			e.printStackTrace();
		}
		return me;
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private DigitalOutPanel      digitalOutPanel1;
	private javax.swing.JMenu    jMenu1;
	private javax.swing.JMenu    jMenu2;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JPanel   jPanel1;
	// End of variables declaration//GEN-END:variables
}
